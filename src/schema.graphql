# import * from './generated/prisma.graphql'

scalar Upload

type SuccessMessage {
  message: String
}

type Mutation {
  createItem(title: String, description: String, price: Int, image: String, largeImage: String, inventoryLevel:Int): Item!
  updateItem(id: ID!, title: String, description: String, price: Int, inventoryLevel:Int): Item!
  deleteItem(id: ID!): Item
  signup(email: String!, password: String!, name: String!): User!
  signin(email: String!, password: String!): User!
  signout: SuccessMessage
  requestReset(email: String!): SuccessMessage
  resetPassword(resetToken: String!, password: String!, confirmPassword: String!):User!
  updatePermissions(permissions: [Permission], userId: ID!):User
  addToCart(id: ID!): CartItem
  removeFromCart(id:ID!): CartItem
  createOrder(token: String!, 
              billing_address_city: String, 
              billing_address_country: String,
              billing_address_country_code: String,
              billing_address_line1: String,
              billing_address_state: String,
              billing_address_zip: String,
              billing_name: String,
              shipping_address_city: String,
              shipping_address_country: String,  
              shipping_address_country_code: String,
              shipping_address_line1: String,
              shipping_address_state: String,
              shipping_address_zip: String,
              shipping_name: String): Order!
  uploadFile(file:Upload!): File!
  
  }

type Query {
  items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int ): [Item]!
  item(where: ItemWhereUniqueInput!): Item
  itemsConnection(where: ItemWhereInput): ItemConnection!
  me: User
  user: User!
  users: [User]!
  order(id: ID!): Order
  orders(orderBy: OrderOrderByInput): [Order]!
  uploads:[File]
}

type User {
  id: ID!
  name: String!
  email: String!
  permissions: [Permission!]!
  cart: [CartItem!]!
}